{"componentChunkName":"component---src-templates-post-template-js","path":"/pages/posts/javascript","result":{"data":{"markdownRemark":{"id":"06cc473d-9d11-561f-92b7-d55a11b81277","html":"<h2 id=\"javascript란\" style=\"position:relative;\"><a href=\"#javascript%EB%9E%80\" aria-label=\"javascript란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JavaScript란❔</h2>\n<ul>\n<li>넷스케이프 커뮤니케이션즈사(Netscape Communications)가 개발한 스크립트 언어</li>\n<li>웹을 풍부하게 만들어주는 작고 가벼운 언어</li>\n<li>객체 지향 언어</li>\n<li>변수 자료형을 선언하지 않아 동적임</li>\n<li>인터프리터식 해석</li>\n</ul>\n<h2 id=\"특징\" style=\"position:relative;\"><a href=\"#%ED%8A%B9%EC%A7%95\" aria-label=\"특징 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>특징</h2>\n<ul>\n<li>String + Number를 하는 경우 무조건 String으로 강제 형변환</li>\n</ul>\n<p><strong>전위(++num) vs 후위(num++) 증감 연산자 <u>할당순서의 차이</u> ❗❗</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">num++\n변수에 먼저 값을 할당 한 뒤 증가\n++num\n숫자를 먼저 증가한 뒤 변수에 할당</code></pre></div>\n<h4 id=\"함수선언식-vs-함수표현식-u호이스팅의-영향u-\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98%EC%84%A0%EC%96%B8%EC%8B%9D-vs-%ED%95%A8%EC%88%98%ED%91%9C%ED%98%84%EC%8B%9D-u%ED%98%B8%EC%9D%B4%EC%8A%A4%ED%8C%85%EC%9D%98-%EC%98%81%ED%96%A5u-\" aria-label=\"함수선언식 vs 함수표현식 u호이스팅의 영향u  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수선언식 vs 함수표현식 <u>호이스팅의 영향</u> ❗❗</h4>\n<ul>\n<li>자바스크립트는 기본적으로 ES6에 추가 된 변수형인 let,const도 호이스팅에 영향을 안준다</li>\n<li>함수선언식은 호이스팅이 되는 반면에 함수표현식은 호이스팅에 영향을 안 받는다</li>\n</ul>\n<p><strong><u>즉, var형태를 제외하고 나머지(함수 표현식 제외)는 전부 호이스팅 영향을 받지 않음</u>❗❗</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">호이스팅이란❔\n- 브라우저가 위치와 관계없이 js를 해석할때 맨위로 끌어 올리는 행위</code></pre></div>\n<h3 id=\"문자열-함수-string\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4-%ED%95%A8%EC%88%98-string\" aria-label=\"문자열 함수 string permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문자열 함수 (String)</h3>\n<h4 id=\"--문자-포함-구별-및-반복-함수-includes-startswith-endwith-repeat\" style=\"position:relative;\"><a href=\"#--%EB%AC%B8%EC%9E%90-%ED%8F%AC%ED%95%A8-%EA%B5%AC%EB%B3%84-%EB%B0%8F-%EB%B0%98%EB%B3%B5-%ED%95%A8%EC%88%98-includes-startswith-endwith-repeat\" aria-label=\"  문자 포함 구별 및 반복 함수 includes startswith endwith repeat permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 문자 포함 구별 및 반복 함수 (includes, startsWith, endWith, repeat)</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const email = &#39;yealee.kim87@gmail.com&#39;;\n\nconsole.log(email.startsWith(&#39;ye&#39;)); // true\nconsole.log(email.endsWith(&#39;com&#39;)); // true\nconsole.log(email.includes(&#39;@gmail&#39;)); // true</code></pre></div>\n<h4 id=\"--대소문자-구별하는-함수-touppercasetolowercase\" style=\"position:relative;\"><a href=\"#--%EB%8C%80%EC%86%8C%EB%AC%B8%EC%9E%90-%EA%B5%AC%EB%B3%84%ED%95%98%EB%8A%94-%ED%95%A8%EC%88%98-touppercasetolowercase\" aria-label=\"  대소문자 구별하는 함수 touppercasetolowercase permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 대소문자 구별하는 함수 (toUpperCase,toLowerCase)</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let lastName = &#39;Yeri Kim&#39;;\nlet upperLastName = lastName.toUpperCase(); // YERI KIM\nlet lowerLastName = lastName.toLowerCase(); // yeri kim</code></pre></div>\n<h4 id=\"--문자열-안에-특정-문자열-있는지-체크-indexof\" style=\"position:relative;\"><a href=\"#--%EB%AC%B8%EC%9E%90%EC%97%B4-%EC%95%88%EC%97%90-%ED%8A%B9%EC%A0%95-%EB%AC%B8%EC%9E%90%EC%97%B4-%EC%9E%88%EB%8A%94%EC%A7%80-%EC%B2%B4%ED%81%AC-indexof\" aria-label=\"  문자열 안에 특정 문자열 있는지 체크 indexof permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 문자열 안에 특정 문자열 있는지 체크 (indexOf)</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let info = &quot;JavaScript는 프로래밍 언어이다.&quot;;\nlet firstChar = info.indexOf(&quot;프로래밍&quot;);\nconsole.log(info, firstChar);\n\nif (firstChar !== -1) {     // firstChar !== -1 =&gt; 프로래밍 문구가 있다면으로 해석\n  info = info.slice(0, firstChar) + &quot;프로그래밍&quot; + info.slice(firstChar+4, info.length);\n}\n// 출력 - JavaScript는 프로그래밍 언어이다</code></pre></div>\n<h4 id=\"--날짜-관련-함수-new-date-getfullyear-등\" style=\"position:relative;\"><a href=\"#--%EB%82%A0%EC%A7%9C-%EA%B4%80%EB%A0%A8-%ED%95%A8%EC%88%98-new-date-getfullyear-%EB%93%B1\" aria-label=\"  날짜 관련 함수 new date getfullyear 등 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 날짜 관련 함수 (new Date, getFullYear 등)</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// ❗❗ 날짜의 기준이 되는 날은 1970년 1월 1일 ❗❗\nlet rightNow = new Date(); // 2019-02-18T00:45:06.562Z (GMT기준 시간)\nlet year = rightNow.getFullYear();\nlet month = rightNow.getMonth()+1; // 달은 0부터 시작이라 +1 해야함!!!\nlet date = rightNow.getDate();\nlet day = rightNow.getDay();\nlet currentHour = rightNow.getHours();\nlet currentMin = rightNow.getMinutes();\nlet time = rightNow.getTime();  // 시간초로 나타내줌\n\n// 특정 날짜의 Date 확인 예시\nlet date1 = new Date(&#39;December 17, 2019 03:24:00&#39;);\nlet date2 = new Date(&#39;2019-12-17T03:24:00&#39;);\nlet date3 = new Date(2019, 5, 1);</code></pre></div>\n<h4 id=\"--수학math관련-함수-random-floor-round-등\" style=\"position:relative;\"><a href=\"#--%EC%88%98%ED%95%99math%EA%B4%80%EB%A0%A8-%ED%95%A8%EC%88%98-random-floor-round-%EB%93%B1\" aria-label=\"  수학math관련 함수 random floor round 등 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 수학(Math)관련 함수 (random, floor, round 등)</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Math.random(); // 0.000000 ~ 9.999999 출력\nMath.round(); // 반올림\nMath.floor(); // 버림\nMath.ceil(); // 올림\n\nMath.floor(Math.random()*최대범위)+최소범위; // 랜덤 함수 최소 최대 범위 지정\nMath.floor(Math.random()*(max-min+1))+min; // 예시</code></pre></div>\n<hr>\n<h3 id=\"객체object\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4object\" aria-label=\"객체object permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체(Object)</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let plan1 = {\n  name: &quot;Basic&quot;,\n  price: 3.99,\n  space: 100,\n  transfer: 1000,\n  pages: 10\n};</code></pre></div>\n<ul>\n<li>프로퍼티 중복 X</li>\n<li>프로퍼티는 어떤 타입이든 가능</li>\n<li>객체를 정의한 후 프로퍼티 값 수정 및 추가 가능</li>\n</ul>\n<h4 id=\"객체-및-배열-순회-함수-for-in-foreach-for-of-map\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4-%EB%B0%8F-%EB%B0%B0%EC%97%B4-%EC%88%9C%ED%9A%8C-%ED%95%A8%EC%88%98-for-in-foreach-for-of-map\" aria-label=\"객체 및 배열 순회 함수 for in foreach for of map permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 및 배열 순회 함수 (for in, forEach, for of, map)</h4>\n<h4 id=\"--map-함수\" style=\"position:relative;\"><a href=\"#--map-%ED%95%A8%EC%88%98\" aria-label=\"  map 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- map 함수</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 문자열 배열에서 문자열 길이만 획득하기\nvar arr = [&#39;foo&#39;, &#39;hello&#39;, &#39;diamond&#39;, &#39;A&#39;];\nvar arr2 = arr.map(function (str) {\n    return str.length;\n});\nconsole.log(arr2); // [3, 5, 7, 1]</code></pre></div>\n<ul>\n<li><u>map은 콜백 함수의 리턴을 모아서 새로운 배열을 만드는 것</u></li>\n<li>기존 배열은 변경하지 않음</li>\n</ul>\n<h4 id=\"--foreach문\" style=\"position:relative;\"><a href=\"#--foreach%EB%AC%B8\" aria-label=\"  foreach문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- forEach문</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var items = [&#39;item1&#39;, &#39;item2&#39;, &#39;item3&#39;];\n\nitems.forEach(function(item) {\n    console.log(item);\n});\n// 출력 결과: item, item2, item3</code></pre></div>\n<ul>\n<li>foreach 반복문은 오직 Array 객체에서만 사용가능한 메서드</li>\n<li>ES6부터 Map, Set 지원 가능</li>\n<li>기존 배열이 수정 됨</li>\n<li>return이 없지만 return을 선언하여 탈출 가능</li>\n</ul>\n<h4 id=\"--for-in문\" style=\"position:relative;\"><a href=\"#--for-in%EB%AC%B8\" aria-label=\"  for in문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- for in문</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var obj = {\n    a: 1,\n    b: 2,\n    c: 3\n};\n\nfor (var prop in obj) {\n    console.log(prop, obj[prop]); // a 1, b 2, c 3\n}</code></pre></div>\n<ul>\n<li>객체 및 배열에 사용 가능</li>\n<li>i를 0으로 초기화, 반복문이 몇번 돌지 내부적으로 결정</li>\n</ul>\n<h4 id=\"--for-of문\" style=\"position:relative;\"><a href=\"#--for-of%EB%AC%B8\" aria-label=\"  for of문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- for of문</h4>\n<ul>\n<li>Symbol.iterator 속성을 가지는 컬렉션에 적용</li>\n<li>Symbol이란 ❓<br>\nES6에서 새롭게 추가된 7번째 타입<br>\n변경 불가능한 원시 타입의 값 (원시 값은 객체를 제외한 string,number, undefined, null, Boolean)<br>\n충돌 위험이 없는 유일한 <strong><u>객체의 프로퍼티 키(property key)</u></strong>를 만들기 위해 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var iterable = [10, 20, 30];\n\nfor (var value of iterable) {\n  console.log(value); // 10, 20, 30\n}</code></pre></div>\n<h4 id=\"--for-in-vs-for-of-차이\" style=\"position:relative;\"><a href=\"#--for-in-vs-for-of-%EC%B0%A8%EC%9D%B4\" aria-label=\"  for in vs for of 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- for in vs for of 차이</h4>\n<ul>\n<li>for in 반복문 : 객체의 모든 열거 가능한 속성에 대해 반복</li>\n<li>for of 반복문 : [Symbol.iterator] 속성을 가지는 컬렉션에 전용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var iterable = [3, 5, 7];\niterable.foo = &quot;hello&quot;;\n\nfor (var key in iterable) {\n  console.log(key); // 0, 1, 2, &quot;foo&quot;, &quot;arrCustom&quot;, &quot;objCustom&quot;\n}\n\nfor (var value of iterable) {\n  console.log(value); // 3, 5, 7\n}</code></pre></div>\n<h4 id=\"객체-프로퍼티-접근-방식\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-%EC%A0%91%EA%B7%BC-%EB%B0%A9%EC%8B%9D\" aria-label=\"객체 프로퍼티 접근 방식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⭐객체 프로퍼티 접근 방식⭐</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let difficult = {\n  33: &#39;숫자 형식도 되네&#39;,\n  &#39;my name&#39;: &#39;스페이스 포함 가능&#39;,\n  color: &#39;silver&#39;,\n  키: &#39;한글인 키는 따옴표가 없어도 되는군!!&#39;,\n  &#39;!키&#39;: &#39;느낌표 있는 키는 따옴표가 필요하군&#39;,\n  $special: &#39;$는 없어도 되는군&#39;\n};</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">console.log(difficult.[&#39;33&#39;]); // 동시에 사용 불가\nconsole.log(difficult.my name); // 객체로 바로 접근하는데 띄어쓰기 때문에 괄호로 묶어준다\nconsole.log(difficult.color); // 올바른 sliver 출력\nconsole.log(difficult.키); // 한글은 따옴표 없이 접근 가능\nconsole.log(difficult.!키); // !는 괄호가 필요\nconsole.log(difficult[&#39;!키&#39;]); // !때문에 괄호로 묶어줘서\nconsole.log(difficult.$special); // $는 괄호 없어도 사용가능</code></pre></div>\n<h4 id=\"-u대괄호-vs-dotu-\" style=\"position:relative;\"><a href=\"#-u%EB%8C%80%EA%B4%84%ED%98%B8-vs-dotu-\" aria-label=\" u대괄호 vs dotu  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⭐ <u>대괄호 vs dot</u> ⭐</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let name = &#39;키&#39;;\nconsole.log(difficult[name]); // 1 한글인 키는 따옴표가 없어도 되는군!\nconsole.log(difficult.name); // 2 undefined</code></pre></div>\n<ul>\n<li><strong>대괄호 접근 : 위의 내용 처럼 변수로 프로퍼티 접근 가능</strong></li>\n<li><strong>dot 접근 : difiicult 객체 안에 name을 바로 접근하는 거라 Undefined 출력</strong></li>\n</ul>\n<p>❗❗❗ <u>둘의 가장 큰 차이는 변수로 접근 가능하냐의 차이</u></p>\n<h4 id=\"객체-안에-key-value-값-대입\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4-%EC%95%88%EC%97%90-key-value-%EA%B0%92-%EB%8C%80%EC%9E%85\" aria-label=\"객체 안에 key value 값 대입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 안에 key, value 값 대입</h4>\n<h4 id=\"--key-값-할당\" style=\"position:relative;\"><a href=\"#--key-%EA%B0%92-%ED%95%A0%EB%8B%B9\" aria-label=\"  key 값 할당 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- key 값 할당</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//객체 생성 후 프로퍼티 추가1 (정적)\nvar person = {};\nperson.name = &#39;홍길동&#39;;\nperson.age = 29;</code></pre></div>\n<ul>\n<li>정적으로 바로 접근시 키 값을 유동적으로 변경 불가 (항상 정해진 값)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//객체 생성 후 프로퍼티 추가2 (동적)\nperson[&quot;name&quot;] = &#39;홍길동&#39;;\nperson[&quot;age&quot;] = 29;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">test_obj = {a:1, b:2};\nconsole.log(test_obj);\n\ntest_obj[&#39;aa&#39;] = 11;\ntest_obj.bb = 22;\nconsole.log(test_obj);\n\ndelete test_obj.a;\ndelete test_obj[&#39;b&#39;];\nconsole.log(test_obj);\n------------------------\nObject {a: 1, b: 2}\nObject {a: 1, b: 2, aa: 11, bb: 22}\nObject {aa: 11, bb: 22}</code></pre></div>\n<ul>\n<li>대괄호로 접근시 키 값을 동적으로 변경 할 수 있다</li>\n</ul>\n<h4 id=\"--value-값-할당\" style=\"position:relative;\"><a href=\"#--value-%EA%B0%92-%ED%95%A0%EB%8B%B9\" aria-label=\"  value 값 할당 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- value 값 할당</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">difficult[name] = &#39;값 바꾼다&#39;;\nconsole.log(difficult[name]); // 없는 name을 객체에 키 값으로 넣고 value로 &#39;값 바꾼다&#39;\n\ndifficult.color = &#39;색깔&#39;; // color는 현재 있으므로 수정 됨 difficult[&quot;color&quot;] 도 같음\nconsole.log(difficult.color);\n\nconsole.log(&#39;생성전: &#39; + difficult.new); // undefined\ndifficult.new = &#39;새로 추가된 프로퍼티&#39;;\nconsole.log(&#39;생성후: &#39; + difficult.new); // &quot;새로 추가된 프로퍼티&quot;</code></pre></div>\n<ul>\n<li>중복 시 수정된 값으로 할당</li>\n<li>없으면 새롭게 키값 쌍으로 할당</li>\n</ul>\n<h4 id=\"함수-스코프에-따른-코드-오염\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98-%EC%8A%A4%EC%BD%94%ED%94%84%EC%97%90-%EB%94%B0%EB%A5%B8-%EC%BD%94%EB%93%9C-%EC%98%A4%EC%97%BC\" aria-label=\"함수 스코프에 따른 코드 오염 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 스코프에 따른 코드 오염</h4>\n<ul>\n<li>global 변수를 선언하면 어디에서나 사용 가능 한 global namespace 보유</li>\n<li>namespace : 변수 이름을 사용할 수 있는 범위</li>\n<li>global 변수는 프로그램 종료 시 까지 생존</li>\n<li>local 변수는 block이 끝나면 죽음</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const satellite = &#39;The Moon&#39;;\nconst galaxy = &#39;The Milky Way&#39;;\nlet stars = &#39;North Star&#39;;\n\nconst callMyNightSky = () =&gt; {\n  stars = &#39;Sirius&#39;;\n\n  return &#39;Night Sky: &#39; + satellite + &#39;, &#39; + stars + &#39;, &#39; + galaxy;\n};\n\nconsole.log(callMyNightSky());\nconsole.log(stars);</code></pre></div>\n<h4 id=\"-u오염의-예u\" style=\"position:relative;\"><a href=\"#-u%EC%98%A4%EC%97%BC%EC%9D%98-%EC%98%88u\" aria-label=\" u오염의 예u permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⛔ <u>오염의 예</u></h4>\n<ol>\n<li>stars이라는 global 변수 존재</li>\n<li>callMyNightSky함수에서 새로운 변수를 선언하고 싶었는데 깜빡하고 let 키워드를 작성 X</li>\n<li>callMyNightSky을 호출하면 stars 변수에 “Sirius”이 할당</li>\n<li>global 변수였던 stars에 영향</li>\n<li>다른 함수에서 global 변수인 stars을 사용하고 싶은데 값이 수정된 “Sirius”으로 사용</li>\n</ol>\n<h4 id=\"local-storage-vs-sesstion-storage-vs-cookie-차이점-\" style=\"position:relative;\"><a href=\"#local-storage-vs-sesstion-storage-vs-cookie-%EC%B0%A8%EC%9D%B4%EC%A0%90-\" aria-label=\"local storage vs sesstion storage vs cookie 차이점  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>local Storage vs Sesstion Storage vs Cookie 차이점 ❗❗</h4>\n<ul>\n<li>Local Storage: 해당 도메인에 영구 저장하고 싶을 때</li>\n<li>Session Storage: 해당 도메인의, 한 세션에서만 저장하고 싶을 때. 창을 닫으면 정보가 날라감</li>\n<li>Cookie: 해당 도메인에 날짜를 설정하고 그 때까지만 저장하고 싶을 때</li>\n</ul>\n<hr>\n<h4 id=\"사진-자료-및-사이트-출처\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%A7%84-%EC%9E%90%EB%A3%8C-%EB%B0%8F-%EC%82%AC%EC%9D%B4%ED%8A%B8-%EC%B6%9C%EC%B2%98\" aria-label=\"사진 자료 및 사이트 출처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사진 자료 및 사이트 출처</h4>\n<ul>\n<li><a href=\"https://webclub.tistory.com/136\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://webclub.tistory.com/136</a><br>\n클래스 vs 함수 사진</li>\n<li><a href=\"https://www.quora.com/What-is-the-difference-between-sessionstorage-localstorage-and-Cookies\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.quora.com/What-is-the-difference-between-sessionstorage-localstorage-and-Cookies</a><br>\n브라우저 데이터 공간 차이점 사이트</li>\n<li><a href=\"https://junspapa-itdev.tistory.com/22\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://junspapa-itdev.tistory.com/22</a>, <a href=\"http://b1ix.net/266\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://b1ix.net/266</a><br>\n객체 안에 값 대입</li>\n<li><a href=\"https://jsdev.kr/t/for-in-vs-for-of/2938\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://jsdev.kr/t/for-in-vs-for-of/2938</a><br>\n배열 및 객체 순회</li>\n</ul>","fields":{"slug":"/pages/posts/javascript","tagSlugs":["/tag/javascript/"]},"frontmatter":{"date":"2020-01-29T23:41:32.169Z","description":"(1/29 - 1/30) Wecode study 2일,3일차","tags":["javascript"],"title":"JavaScript","socialImage":""}}},"pageContext":{"slug":"/pages/posts/javascript"}}}