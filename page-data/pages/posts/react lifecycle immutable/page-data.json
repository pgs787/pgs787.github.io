{"componentChunkName":"component---src-templates-post-template-js","path":"/pages/posts/react lifecycle immutable","result":{"data":{"markdownRemark":{"id":"7309ebc8-0ed4-5ad6-9e7a-53dad8eaffca","html":"<h3 id=\"시작-전에-개발환경-어디서나-맞추는-방법\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%9E%91-%EC%A0%84%EC%97%90-%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD-%EC%96%B4%EB%94%94%EC%84%9C%EB%82%98-%EB%A7%9E%EC%B6%94%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"시작 전에 개발환경 어디서나 맞추는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시작 전에 개발환경 어디서나 맞추는 방법</h3>\n<ul>\n<li>기본적인 src 폴더 와 package.json 파일만 있으면 됨</li>\n<li>github에 올릴 때 gitignore에 node_modules 폴더 등록 되어 업로드 제외</li>\n<li>package.json을 통해 npm install 하면 해당 웹에 필요한 패키지 다운로드함으로 개발 가능</li>\n</ul>\n<h2 id=\"함수-컴포넌트와-클래스-컴포넌트\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%99%80-%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\" aria-label=\"함수 컴포넌트와 클래스 컴포넌트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 컴포넌트와 클래스 컴포넌트</h2>\n<h3 id=\"매개변수-안에-비구조화-할당-방법\" style=\"position:relative;\"><a href=\"#%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98-%EC%95%88%EC%97%90-%EB%B9%84%EA%B5%AC%EC%A1%B0%ED%99%94-%ED%95%A0%EB%8B%B9-%EB%B0%A9%EB%B2%95\" aria-label=\"매개변수 안에 비구조화 할당 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>매개변수 안에 비구조화 할당 방법</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. (props)로 받아와 props.name으로 접근\n2. ({name}) 으로 name 바로 접근</code></pre></div>\n<h3 id=\"함수형-컴포넌트\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98%ED%98%95-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\" aria-label=\"함수형 컴포넌트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수형 컴포넌트</h3>\n<ul>\n<li>단순히 값(props)만 받아와서 보여주는 경우</li>\n<li>불필요한 기능이 없고 초기 마운트 속도가 클래스 컴포넌트보다 빠름</li>\n<li>메모리 사용에도 효율적이지만 상당히 큰 웹이 아니면 성능차이 별로 없음</li>\n</ul>\n<h3 id=\"잠깐-알고-가세요\" style=\"position:relative;\"><a href=\"#%EC%9E%A0%EA%B9%90-%EC%95%8C%EA%B3%A0-%EA%B0%80%EC%84%B8%EC%9A%94\" aria-label=\"잠깐 알고 가세요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⭐잠깐 알고 가세요!!⭐</h3>\n<h4 id=\"react-hooks\" style=\"position:relative;\"><a href=\"#react-hooks\" aria-label=\"react hooks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Hooks❓❓</h4>\n<ul>\n<li>함수형 컴포넌트에서 <u><strong>클래스형 컴포넌트 기능들을 사용할 수 있도록 해주는 리액트의 새로운 기능</strong></u></li>\n<li>리액트 16.8v 부터 사용 가능</li>\n</ul>\n<h3 id=\"클래스-컴포넌트\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\" aria-label=\"클래스 컴포넌트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스 컴포넌트</h3>\n<ul>\n<li><u><strong>클래스 컴포넌트에는 라이프사이클 메소드 및 state 사용 가능</strong></u></li>\n<li>화살표 함수 사용하지 않으면 아래 코드 처럼 번거로운 bind 작업이 필요❗</li>\n<li><u>클래스형 컴포넌트는 인스턴스 생성에 의해 부하가 생김 단점</u>❗❗❗</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">constructor(props){\nsuper(props);\nthis.handle = this.handle.bind(this);\n}</code></pre></div>\n<h2 id=\"lifecycleapi-확대해서-보기\" style=\"position:relative;\"><a href=\"#lifecycleapi-%ED%99%95%EB%8C%80%ED%95%B4%EC%84%9C-%EB%B3%B4%EA%B8%B0\" aria-label=\"lifecycleapi 확대해서 보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LifeCycleAPI (확대해서 보기!)</h2>\n<p><img src=\"https://user-images.githubusercontent.com/43316372/74121681-e34c4880-4c0b-11ea-92b8-005be8d032a0.png\" alt=\"20200210_134714\"></p>\n<h3 id=\"mounting\" style=\"position:relative;\"><a href=\"#mounting\" aria-label=\"mounting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mounting</h3>\n<ul>\n<li>컴포넌트가 브라우저에 렌더 될 시 실행</li>\n<li><u><strong>contructor을 가장 먼저 실행 : 메서드를 바인딩하거나 state를 초기화하는 작업이 없다면, 해당 컴포넌트에는 생성자를 구현 X</strong></u></li>\n<li>getDerivedStateFromProps : props를 받은 값을 state로 동기화</li>\n<li>componentDidMount : 외부라이브러리 연동(D3), 컴포넌트에 필요한 데이터요청(Ajax,GraphQL),Dom에 관련된 작업:스크롤 설정,크기</li>\n</ul>\n<h3 id=\"updating\" style=\"position:relative;\"><a href=\"#updating\" aria-label=\"updating permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Updating</h3>\n<ul>\n<li>props나 state가 변경시 실행</li>\n<li>shouldComponentUpdate : 컴포넌트가 업데이트 되는 성능 최적화, 실제 사용자가 사용하는 브라우저에서는 가상 DOM과 비교하여 변경된 사항만 렌더해주기 때문에 사용자 입장은 필요 없고 <u><strong>가상 DOM에서 최적화 해서 사용하기 위함</strong></u><br>\ntrue면 렌더링 false면 멈춤<br>\n<u><strong>불변성 유지에 중요한 단계</strong></u>❗</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  // 디폴트는 true\n  if(this.state !== nextState){\n  return true;}\n  return this.props.info !== nextProps.info;</code></pre></div>\n<ul>\n<li>componentDidUpdate : 컴포넌트 업데이트시 호출, NextPorps 및 NextState 값 이용해서 변경 시 어떤 작업 실행</li>\n</ul>\n<h3 id=\"unmounting\" style=\"position:relative;\"><a href=\"#unmounting\" aria-label=\"unmounting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UnMounting</h3>\n<ul>\n<li>컴포넌트 삭제 시 어떤 작업 실행</li>\n</ul>\n<h2 id=\"u불변성immutabe에-중요성u\" style=\"position:relative;\"><a href=\"#u%EB%B6%88%EB%B3%80%EC%84%B1immutabe%EC%97%90-%EC%A4%91%EC%9A%94%EC%84%B1u\" aria-label=\"u불변성immutabe에 중요성u permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><u>불변성(Immutabe)에 중요성</u>❗❗❗</h2>\n<ul>\n<li><u><strong>state의 원본의 값을 그대로 사용하는 것이 아닌 복제를 통해 새로운 값을 변경함으로써 setState를 해줘야 리렌더링 가능❗❗❗</strong></u></li>\n<li>this.state = 와 같이 직접 접근해서 바꾸면 리렌더링이 이루어지지 않음</li>\n<li>무조건 setState를 이용해서 변경!!</li>\n<li>여러개의 자식으로부터 데이터를 모으거나 두 개의 자식 컴포넌트들이 서로 통신하게 하려면 부모 컴포넌트에 공유 state를 정의</li>\n<li>부모 컴포넌트는 props를 사용하여 자식 컴포넌트에 state를 다시 전달 가능 (부모 자식 값 동기화)</li>\n<li>state를 부모 컴포넌트로 끌어올리는 것은 React 컴포넌트를 리팩토링할 때 흔히 사용</li>\n</ul>\n<h2 id=\"dom에-직접-접근하는-방법-ref\" style=\"position:relative;\"><a href=\"#dom%EC%97%90-%EC%A7%81%EC%A0%91-%EC%A0%91%EA%B7%BC%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-ref\" aria-label=\"dom에 직접 접근하는 방법 ref permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM에 직접 접근하는 방법 ref</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. ref={ref=&gt;this.input = ref}\n// this.input은 해당 지정한 input을 가리킴\n2.  input = Rreact.CreateRef()하고\n// 해당 태그에 ref={this.input} 해야 함\n// 그리고 이벤트 등록시\n// this.input.current.focus() 해줘야 함</code></pre></div>\n<ul>\n<li>어떤 작업 시 요소의 특정 값을 불려오려고 할 때 사용</li>\n</ul>\n<hr>\n<ul>\n<li><a href=\"https://velopert.com/3613\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://velopert.com/3613</a>\nreact 특징, 라이프사이클 내용 및 사진</li>\n<li><a href=\"http://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/</a>\n리액트 라이프 사이클 버전 체크</li>\n</ul>","fields":{"slug":"/pages/posts/react lifecycle immutable","tagSlugs":["/tag/react/","/tag/lifecycle/"]},"frontmatter":{"date":"2020-02-09T11:40:32.169Z","description":"React life cycle component 공부","tags":["react","lifecycle"],"title":"React (2)","socialImage":""}}},"pageContext":{"slug":"/pages/posts/react lifecycle immutable"}}}